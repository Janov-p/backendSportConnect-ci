"""Initial migration

Revision ID: d1cd8aeef930
Revises: 
Create Date: 2025-02-26 13:50:16.813532

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd1cd8aeef930'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('participation')
    op.drop_table('user')
    op.add_column('events', sa.Column('event_name', sa.String(), nullable=False))
    op.add_column('events', sa.Column('event_description', sa.String(length=200), nullable=False))
    op.add_column('events', sa.Column('id_gestionnaire', sa.Integer(), nullable=False))
    op.add_column('events', sa.Column('id_sport', sa.Integer(), nullable=True))
    op.add_column('events', sa.Column('event_ville', sa.String(length=50), nullable=False))
    op.add_column('events', sa.Column('event_date', sa.DateTime(), nullable=False))
    op.add_column('events', sa.Column('event_max_utilisateur', sa.Integer(), nullable=False))
    op.add_column('events', sa.Column('event_Items', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('events', sa.Column('is_private', sa.Boolean(), nullable=False))
    op.add_column('events', sa.Column('is_team_vs_team', sa.Boolean(), nullable=False))
    op.add_column('events', sa.Column('event_age_min', sa.Integer(), nullable=False))
    op.add_column('events', sa.Column('event_age_max', sa.Integer(), nullable=False))
    op.add_column('events', sa.Column('nombre_utilisateur_min', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'events', 'sports', ['id_sport'], ['id'])
    op.create_foreign_key(None, 'events', 'users', ['id_gestionnaire'], ['id'])
    op.drop_column('events', 'stat_equipe')
    op.drop_column('events', 'sport_nom')
    op.drop_column('events', 'stat_solo')
    op.drop_column('events', 'nbr_equipe')
    op.drop_column('events', 'nbr_joueur_max')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('nbr_joueur_max', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('events', sa.Column('nbr_equipe', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('events', sa.Column('stat_solo', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('events', sa.Column('sport_nom', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('events', sa.Column('stat_equipe', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'events', type_='foreignkey')
    op.drop_constraint(None, 'events', type_='foreignkey')
    op.drop_column('events', 'nombre_utilisateur_min')
    op.drop_column('events', 'event_age_max')
    op.drop_column('events', 'event_age_min')
    op.drop_column('events', 'is_team_vs_team')
    op.drop_column('events', 'is_private')
    op.drop_column('events', 'event_Items')
    op.drop_column('events', 'event_max_utilisateur')
    op.drop_column('events', 'event_date')
    op.drop_column('events', 'event_ville')
    op.drop_column('events', 'id_sport')
    op.drop_column('events', 'id_gestionnaire')
    op.drop_column('events', 'event_description')
    op.drop_column('events', 'event_name')
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    op.create_table('participation',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name='participation_event_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='participation_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'event_id', name='participation_pkey')
    )
    # ### end Alembic commands ###
